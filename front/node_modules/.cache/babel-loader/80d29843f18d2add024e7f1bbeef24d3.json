{"ast":null,"code":"var _jsxFileName = \"/Users/yanisbreton/InTheMemoryTest/front/src/App.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Grid, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { StylesProvider } from '@material-ui/styles';\nimport axios from 'axios';\nimport styles from './App.module.scss';\n\nconst App = () => {\n  const [totalEarn, setTotalEarn] = useState(0);\n  const [averageRevenue, setAverageRevenue] = useState(0);\n  const [uniqueCustomersCount, setUniqueCustomersCount] = useState(0);\n  useEffect(() => {\n    axios.get('http://localhost:3000/').then(({\n      status,\n      data\n    }) => {\n      if (status === 200) {\n        setTotalEarn(Number(data.totalEarn));\n        setAverageRevenue(data.averagePrice);\n        setUniqueCustomersCount(data.customerAmount);\n      }\n    });\n  }, []);\n  const currencyOptions = {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n    useGrouping: true\n  };\n  console.log(typeof totalEarn);\n  return React.createElement(Grid, {\n    className: styles.App,\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(StylesProvider, {\n    injectFirst: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    alignItems: \"center\",\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Country\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Select, {\n    id: \"select\",\n    value: \"France\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"France\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"France\"), React.createElement(MenuItem, {\n    value: \"Italia\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Italia\")))), React.createElement(Grid, {\n    item: true,\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Summary\"), React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.detailsMain,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.detailsLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Revenue\"), React.createElement(\"div\", {\n    className: styles.detailsValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, totalEarn.toLocaleString(navigator.language, currencyOptions)))), React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.detailsMain,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.detailsLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Average revenue per order\"), React.createElement(\"div\", {\n    className: styles.detailsValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, averageRevenue.toLocaleString(navigator.language, currencyOptions)))), React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.detailsMain,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.detailsLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Customers\"), React.createElement(\"div\", {\n    className: styles.detailsValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, uniqueCustomersCount.toLocaleString(navigator.language)))))), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Revenue for month\"), \"Graph\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/yanisbreton/InTheMemoryTest/front/src/App.tsx"],"names":["React","useState","useEffect","Grid","InputLabel","Select","MenuItem","StylesProvider","axios","styles","App","totalEarn","setTotalEarn","averageRevenue","setAverageRevenue","uniqueCustomersCount","setUniqueCustomersCount","get","then","status","data","Number","averagePrice","customerAmount","currencyOptions","style","currency","minimumFractionDigits","maximumFractionDigits","useGrouping","console","log","detailsMain","detailsLabel","detailsValue","toLocaleString","navigator","language"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,mBAAnD;AACA,SAASC,cAAT,QAA+B,qBAA/B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACY,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACc,oBAAD,EAAuBC,uBAAvB,IAAkDf,QAAQ,CAAC,CAAD,CAAhE;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAACS,GAAN,CAAU,wBAAV,EAAoCC,IAApC,CAAyC,CAAC;AAACC,MAAAA,MAAD;AAASC,MAAAA;AAAT,KAAD,KAAoB;AAC3D,UAAID,MAAM,KAAK,GAAf,EAAoB;AAClBP,QAAAA,YAAY,CAACS,MAAM,CAACD,IAAI,CAACT,SAAN,CAAP,CAAZ;AACAG,QAAAA,iBAAiB,CAACM,IAAI,CAACE,YAAN,CAAjB;AACAN,QAAAA,uBAAuB,CAACI,IAAI,CAACG,cAAN,CAAvB;AACD;AACF,KAND;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,QAAMC,eAAe,GAAG;AACtBC,IAAAA,KAAK,EAAE,UADe;AAEtBC,IAAAA,QAAQ,EAAE,KAFY;AAGtBC,IAAAA,qBAAqB,EAAE,CAHD;AAItBC,IAAAA,qBAAqB,EAAE,CAJD;AAKtBC,IAAAA,WAAW,EAAE;AALS,GAAxB;AAQAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOpB,SAAnB;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEF,MAAM,CAACC,GAAxB;AAA6B,IAAA,SAAS,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAgB,IAAA,WAAW,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,MAApB;AAAqB,IAAA,SAAS,EAAC,KAA/B;AAAqC,IAAA,UAAU,EAAC,QAAhD;AAAyD,IAAA,OAAO,EAAE,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EAIE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,QAAX;AAAoB,IAAA,KAAK,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF,CAJF,CADA,EAYA,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,MAApB;AAAqB,IAAA,SAAS,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAED,MAAM,CAACuB,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEvB,MAAM,CAACwB,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAK,IAAA,SAAS,EAAExB,MAAM,CAACyB,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCvB,SAAS,CAACwB,cAAV,CAAyBC,SAAS,CAACC,QAAnC,EAA6Cb,eAA7C,CAAtC,CAFF,CADF,CADF,EAOE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEf,MAAM,CAACuB,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEvB,MAAM,CAACwB,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE;AAAK,IAAA,SAAS,EAAExB,MAAM,CAACyB,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCrB,cAAc,CAACsB,cAAf,CAA8BC,SAAS,CAACC,QAAxC,EAAkDb,eAAlD,CAAtC,CAFF,CADF,CAPF,EAaE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEf,MAAM,CAACuB,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEvB,MAAM,CAACwB,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAK,IAAA,SAAS,EAAExB,MAAM,CAACyB,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCnB,oBAAoB,CAACoB,cAArB,CAAoCC,SAAS,CAACC,QAA9C,CAAtC,CAFF,CADF,CAbF,CAFF,CAZA,EAmCA,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,UAnCA,CADF,CADF;AA4CD,CArED;;AAuEA,eAAe3B,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { Grid, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { StylesProvider } from '@material-ui/styles';\n\nimport axios from 'axios';\n\nimport styles from './App.module.scss';\n\nconst App = () => {\n  const [totalEarn, setTotalEarn] = useState(0);\n  const [averageRevenue, setAverageRevenue] = useState(0);\n  const [uniqueCustomersCount, setUniqueCustomersCount] = useState(0);\n\n  useEffect(() => {\n    axios.get('http://localhost:3000/').then(({status, data}) => {\n      if (status === 200) {\n        setTotalEarn(Number(data.totalEarn));\n        setAverageRevenue(data.averagePrice);\n        setUniqueCustomersCount(data.customerAmount);\n      }\n    });\n  }, []);\n\n  const currencyOptions = {\n    style: 'currency',\n    currency: 'EUR',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n    useGrouping: true,\n  };\n\n  console.log(typeof totalEarn);\n\n  return (\n    <Grid className={styles.App} container>\n      <StylesProvider injectFirst>\n      <Grid item container direction='row' alignItems='center' spacing={2}>\n        <Grid item>\n          <InputLabel>Country</InputLabel>\n        </Grid>\n        <Grid item>\n          <Select id=\"select\" value=\"France\">\n            <MenuItem value=\"France\">France</MenuItem>\n            <MenuItem value=\"Italia\">Italia</MenuItem>\n          </Select>\n        </Grid>\n      </Grid>\n      <Grid item container>\n        <h1>Summary</h1>\n        <Grid item container direction='row'>\n          <Grid item xs={4}>\n            <div className={styles.detailsMain}>\n              <div className={styles.detailsLabel}>Revenue</div>\n              <div className={styles.detailsValue}>{totalEarn.toLocaleString(navigator.language, currencyOptions)}</div>\n            </div>\n          </Grid>\n          <Grid item xs={4}>\n            <div className={styles.detailsMain}>\n              <div className={styles.detailsLabel}>Average revenue per order</div>\n              <div className={styles.detailsValue}>{averageRevenue.toLocaleString(navigator.language, currencyOptions)}</div>\n            </div>\n          </Grid>\n          <Grid item xs={4}>\n            <div className={styles.detailsMain}>\n              <div className={styles.detailsLabel}>Customers</div>\n              <div className={styles.detailsValue}>{uniqueCustomersCount.toLocaleString(navigator.language)}</div>\n            </div>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item>\n        <h1>Revenue for month</h1>\n        Graph\n      </Grid>\n      </StylesProvider>\n    </Grid>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}