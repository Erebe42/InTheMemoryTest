{"ast":null,"code":"var _jsxFileName = \"/Users/yanisbreton/InTheMemoryTest/front/src/Graph.tsx\";\nimport React from 'react';\nimport { LineChart, XAxis, Tooltip, CartesianGrid, Line, ResponsiveContainer, YAxis } from 'recharts';\nexport const Graph = ({\n  data\n}) => {\n  console.log(data.reduce((acc, elem) => {\n    console.log(typeof elem.revenue);\n    return elem.revenue > acc ? elem.revenue : acc;\n  }, 0));\n  return React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: 400\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(ResponsiveContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(LineChart, {\n    data: data,\n    margin: {\n      top: 15,\n      right: 30,\n      left: 60,\n      bottom: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(XAxis, {\n    dataKey: \"date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    dataKey: \"revenue\",\n    type: \"number\",\n    domain: [0, \"dataMax\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(Line, {\n    type: \"linear\",\n    dataKey: \"revenue\",\n    stroke: \"#ff7300\",\n    yAxisId: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(CartesianGrid, {\n    stroke: \"#f5f5f5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))));\n};","map":{"version":3,"sources":["/Users/yanisbreton/InTheMemoryTest/front/src/Graph.tsx"],"names":["React","LineChart","XAxis","Tooltip","CartesianGrid","Line","ResponsiveContainer","YAxis","Graph","data","console","log","reduce","acc","elem","revenue","width","height","top","right","left","bottom"],"mappings":";AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,OAA3B,EAAoCC,aAApC,EAAmDC,IAAnD,EAAyDC,mBAAzD,EAA8EC,KAA9E,QAA2F,UAA3F;AAMA,OAAO,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,MAAL,CACV,CAACC,GAAD,EAAMC,IAAN,KAAe;AACbJ,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOG,IAAI,CAACC,OAAxB;AACA,WAAOD,IAAI,CAACC,OAAL,GAAeF,GAAf,GAAqBC,IAAI,CAACC,OAA1B,GAAoCF,GAA3C;AACD,GAJS,EAKV,CALU,CAAZ;AAQA,SAAO;AAAK,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAER,IADR;AAEE,IAAA,MAAM,EAAE;AAAES,MAAAA,GAAG,EAAE,EAAP;AAAWC,MAAAA,KAAK,EAAE,EAAlB;AAAsBC,MAAAA,IAAI,EAAE,EAA5B;AAAgCC,MAAAA,MAAM,EAAE;AAAxC,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,SAAf;AAAyB,IAAA,IAAI,EAAC,QAA9B;AAAuC,IAAA,MAAM,EAAE,CAAC,CAAD,EAAI,SAAJ,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAoB,IAAA,OAAO,EAAC,SAA5B;AAAsC,IAAA,MAAM,EAAC,SAA7C;AAAuD,IAAA,OAAO,EAAE,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,CADK,CAAP;AAcD,CAvBM","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { LineChart, XAxis, Tooltip, CartesianGrid, Line, ResponsiveContainer, YAxis } from 'recharts';\n\ninterface Props {\n  data: any[];\n}\n\nexport const Graph = ({ data }: Props) => {\n  console.log(data.reduce(\n    (acc, elem) => {\n      console.log(typeof elem.revenue)\n      return elem.revenue > acc ? elem.revenue : acc\n    },\n    0\n  ));\n\n  return <div style={{ width: '100%', height: 400 }}>\n    <ResponsiveContainer>\n      <LineChart\n        data={data}\n        margin={{ top: 15, right: 30, left: 60, bottom: 15 }}\n      >\n        <XAxis dataKey=\"date\" />\n        <YAxis dataKey=\"revenue\" type='number' domain={[0, \"dataMax\"]} />\n        <Line type=\"linear\" dataKey=\"revenue\" stroke=\"#ff7300\" yAxisId={0} />\n        <Tooltip />\n        <CartesianGrid stroke=\"#f5f5f5\" />\n      </LineChart>\n    </ResponsiveContainer>\n  </div>;\n};\n"]},"metadata":{},"sourceType":"module"}